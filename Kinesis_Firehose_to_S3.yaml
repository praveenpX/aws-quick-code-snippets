###################################################################################################

SPDX-License-Identifier: MIT-0
 
Permission is hereby granted, free of charge, to any person obtaining a copy of this
software and associated documentation files (the "Software"), to deal in the Software
without restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so.
 
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


USAGE:
Sample CF template to provision Kinesis Data Firehose with Server Side Encryption enabled.
 
####################################################################################################

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  FirehoseName:
    Type: String
    Description: Name of Kinesis Firehose Delivery Stream
  S3Name:
    Type: String
    Description: S3 Bucket Name for Firehose destination
  S3Compression:
    Type: String
    Description: Compression method for S3 files
    Default: UNCOMPRESSED
    AllowedValues:
      - UNCOMPRESSED
      - GZIP
      - ZIP
      - Snappy
      - HADOOP_SNAPPY
  IntervalInSeconds:
    Type: Number
    MinValue: 60
    MaxValue: 900
    Default: 300
    Description: Number of seconds for buffered data.
  SizeInMBs:
    Type: Number
    MinValue: 1
    MaxValue: 128
    Default: 64
    Description: Size of the buffer in MBs.
  SSEEncryption:
    Type: String
    Description: To Enable/Disable SSE encryption for Kinesis Firehose
    Default: true
    AllowedValues:
    - true
    - false


Resources:
  FirehoseDeliveryIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", ["FirehoseToS3Role", !Ref "AWS::StackName"]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole

  FirehosePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-", ["FirehoseToS3Policy", !Ref "AWS::StackName"]]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref S3Name]]
              - !Join ["", ["arn:aws:s3:::", !Ref S3Name, "/*"]]
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
            Resource:
              !Join ["", ["arn:aws:kinesis:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "stream/", !Ref FirehoseName]]
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              !Join [":", ["arn:aws:kms", !Ref "AWS::Region", !Ref "AWS::AccountId", "key/*"]]
            Condition:
              StringEquals:
                kms:ViaService:
                  !Join [".", ["s3", !Ref "AWS::Region", "amazonaws.com"]]
              StringLike:
                kms:EncryptionContext:
                  !Join ["", ["arn:aws:s3:::", !Ref S3Name, "/*"]]
          - Effect: Allow
            Action:
              - logs:PutLogEvents
            Resource:
              !Join ["", ["arn:aws:logs:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "log-group:", "/aws/kinesisfirehose/kinesis-firehose-log-group:", "log-stream:", !Ref FirehoseName]]
      Roles:
        - Ref: FirehoseDeliveryIAMRole
    DependsOn:
      - FirehoseDeliveryStream

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Ref FirehoseName
      DeliveryStreamType: DirectPut
      DeliveryStreamEncryptionConfigurationInput:
        KeyType: AWS_OWNED_CMK
      S3DestinationConfiguration:
        BucketARN: 
          !Join ["", ["arn:aws:s3:::", !Ref S3Name]]
        CompressionFormat: !Ref S3Compression
        BufferingHints:
          IntervalInSeconds: !Ref IntervalInSeconds
          SizeInMBs: !Ref SizeInMBs
        RoleARN: !GetAtt
          - FirehoseDeliveryIAMRole
          - Arn

Outputs:
  FirehoseDeliveryStreamName:
    Value: !Ref FirehoseDeliveryStream
    Description: Name of the Firehose Delivery Stream

  FirehoseDeliveryStreamARN:
    Value: !GetAtt FirehoseDeliveryStream.Arn
    Description: Name of the Firehose Delivery Stream ARN

  FirehoseDeliveryIAMRoleName:
    Value: !Ref FirehoseDeliveryIAMRole
    Description: Role created for this process

  FirehoseDeliveryIAMRoleARN:
    Value: !GetAtt FirehoseDeliveryIAMRole.Arn
    Description: ARN Role created for this process

  S3NameARN:
    Value: !Ref S3BucketName
    Description: Name of the S3 Bucket
